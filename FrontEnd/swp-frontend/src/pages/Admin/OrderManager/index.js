import { Button, Card, Col, Row } from "antd";
import { useEffect, useState } from "react";
import { get, put } from "../../../utils/request";

function OrderManager() {
  const [orderList, setOrderList] = useState([]);
  const [loading, setLoading] = useState(false);
  const fetchApi = async () => {
    const response = await get("delivery-status/view-all");
    if (response) {
      setOrderList(response);
    }
  };
  useEffect(() => {
    fetchApi();
  }, []);
  const handleCancel = async (item) => {
    try {
      setLoading(true);
      const billResponse = await get(`bill/view-by-id/${item.billId}`);
      const customerEmail = billResponse.email;
      const cancellationTemplate = CancelOrderTemplate({ item, billResponse });
      const data = {
        deliveryAddress: item.deliveryAddress,
        deliveryStatusText: "ƒê√£ h·ªßy",
        estimatedDate: item.estimatedDate,
      };
      const response = await put(
        `delivery-status/update/${item.deliveryStatusId}`,
        data
      );

      if (response) {
        const emailData = {
          toEmail: customerEmail,
          subject: `X√°c nh·∫≠n h·ªßy ƒë∆°n ƒë·∫∑t h√†ng- M√£ ƒë∆°n ${item.billId}`,
          message: cancellationTemplate,
        };
        const responseEmail = await fetch(
          `${process.env.REACT_APP_API_URL}email/send`,
          {
            method: "POST",
            headers: {
              Accept: "application/json",
              "Content-Type": "application/json",
            },
            body: JSON.stringify(emailData),
          }
        );
        if (responseEmail) {
          fetchApi();
        }
      }
    } catch (error) {
      console.error("L·ªói khi g·ª≠i email:", error);
    } finally {
      setLoading(false);
    }
  };
  return (
    <>
      {orderList.length > 0 ? (
        <>
          <Row gutter={[20, 20]}>
            {orderList.map((item) => (
              <Col span={8} key={item.deliveryId}>
                <Card title={`ƒê∆°n h√†ng s·ªë ${item.billId}`}>
                  <p>
                    ƒê·ªãa ch·ªâ: <strong>{item.deliveryAddress}</strong>
                  </p>
                  <p>
                    Tr·∫°ng th√°i: <strong>{item.deliveryStatusText}</strong>
                  </p>
                  <p>
                    Ng√†y nh·∫≠n h√†ng: <strong>{item.estimatedDate}</strong>
                  </p>
                  {item.deliveryStatusText === "Y√™u c·∫ßu h·ªßy ƒë∆°n" && (
                    <>
                      <Button
                        type="primary"
                        onClick={() => handleCancel(item)}
                        loading={loading}
                      >
                        X√°c nh·∫≠n h·ªßy
                      </Button>
                    </>
                  )}
                </Card>
              </Col>
            ))}
          </Row>
        </>
      ) : (
        <>
          <h1>Kh√¥ng c√≥ b√°o gi√° n√†o</h1>
        </>
      )}
    </>
  );
}
export default OrderManager;

const CancelOrderTemplate = (props) => {
  const { item, billResponse } = props;
  const refundAmount = billResponse.koiPrice;
  const formatCurrency = (amount) => {
    return new Intl.NumberFormat("vi-VN", {
      style: "currency",
      currency: "VND",
    })
      .format(amount)
      .replace("‚Ç´", "ƒë");
  };

  return `
        <html>
            <head>
                <meta charset="UTF-8" />
                <style>
                    body {
                        background-color: #f0f7ff;
                        margin: 0;
                        padding: 40px 0;
                        font-family: 'Arial', sans-serif;
                    }
                    .cancellation-email {
                        background-color: #ffffff;
                        max-width: 600px;
                        margin: 0 auto;
                        padding: 30px;
                        border-radius: 15px;
                        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                        border: 1px solid black;
                    }
                    h2 { 
                        color: #1677ff;
                        text-align: center;
                        font-size: 24px;
                        margin-bottom: 25px;
                        padding-bottom: 15px;
                        border-bottom: 2px solid #e6f4ff;
                    }
                    .order-details {
                        background-color: #f8fbff;
                        padding: 20px;
                        margin: 20px 0;
                        border-radius: 10px;
                        border: 1px solid #e6f4ff;
                    }
                    .order-details h3 {
                        color: #1677ff;
                        margin-top: 0;
                        font-size: 18px;
                    }
                    .currency { 
                        font-weight: bold;
                        color: #2f54eb;
                    }
                    .currency.refund { 
                        color: #52c41a;
                        font-size: 1.1em;
                    }
                    .footer {
                        margin-top: 30px;
                        padding-top: 20px;
                        border-top: 2px solid #e6f4ff;
                        font-size: 12px;
                        color: #8c8c8c;
                        text-align: center;
                    }
                    .greeting {
                        color: #1677ff;
                        font-weight: bold;
                    }
                    .order-id {
                        background-color: #e6f4ff;
                        padding: 3px 8px;
                        border-radius: 4px;
                        color: #1677ff;
                        font-weight: bold;
                    }
                    .details-row {
                        display: flex;
                        justify-content: space-between;
                        margin: 10px 0;
                        padding: 5px 0;
                        border-bottom: 1px dashed #e6f4ff;
                    }
                    .details-label {
                        color: #595959;
                        font-weight: bold;
                    }
                    .signature {
                        margin-top: 30px;
                        padding-top: 20px;
                        border-top: 1px solid #e6f4ff;
                        color: #1677ff;
                        font-style: italic;
                    }
                </style>
            </head>
            <body>
                <div class="cancellation-email">
                    <h2>‚ú® X√°c nh·∫≠n h·ªßy ƒë∆°n h√†ng c√° Koi ‚ú®</h2>

                    <p><span class="greeting">K√≠nh g·ª≠i Qu√Ω kh√°ch,</span></p>

                    <p>Ch√∫ng t√¥i xin g·ª≠i l·ªùi c·∫£m ∆°n ch√¢n th√†nh ƒë·∫øn Qu√Ω kh√°ch ƒë√£ quan t√¢m v√† s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa Koi Dayne ‚ú®. Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu h·ªßy ƒë∆°n h√†ng c·ªßa Qu√Ω kh√°ch v√† xin x√°c nh·∫≠n r·∫±ng ƒë∆°n h√†ng ƒë√£ ƒë∆∞·ª£c h·ªßy th√†nh c√¥ng.</p>

                    <div class="order-details">
                        <h3>üóíÔ∏è Th√¥ng tin ƒë∆°n h√†ng</h3>
                        <div class="details-row">
                            <span class="details-label">M√£ ƒë∆°n h√†ng: </span>
                            <span>${item.billId}</span>
                        </div>
                        <div class="details-row">
                            <span class="details-label">ƒê·ªãa ch·ªâ ƒë∆°n h√†ng: </span>
                            <span>${item.deliveryAddress}</span>
                        </div>
                        <div class="details-row">
                            <span class="details-label">S·ªë ti·ªÅn ho√†n l·∫°i: </span>
                            <span class="currency refund">${formatCurrency(
                              refundAmount
                            )}</span>
                        </div>
                    </div>

                    <p>Theo ch√≠nh s√°ch c·ªßa ch√∫ng t√¥i, y√™u c·∫ßu h·ªßy ƒë∆°n c·ªßa Qu√Ω kh√°ch ƒë√£ ƒë∆∞·ª£c ch·∫•p nh·∫≠n. Qu√Ω kh√°ch s·∫Ω ƒë∆∞·ª£c ho√†n l·∫°i 100% s·ªë ti·ªÅn ƒë√£ thanh to√°n, t∆∞∆°ng ƒë∆∞∆°ng <span class="currency refund">${formatCurrency(
                      refundAmount
                    )}</span>.</p>

                    <p>Ch√∫ng t√¥i th·ª±c s·ª± ti·∫øc r·∫±ng kh√¥ng th·ªÉ ph·ª•c v·ª• Qu√Ω kh√°ch trong l·∫ßn n√†y. Koi Dayne cam k·∫øt s·∫Ω kh√¥ng ng·ª´ng c·∫£i thi·ªán ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m v√† d·ªãch v·ª• ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám t·ªët nh·∫•t cho Qu√Ω kh√°ch trong nh·ªØng l·∫ßn mua s·∫Øm ti·∫øp theo ‚ú®</p>

                    <p>N·∫øu Qu√Ω kh√°ch c√≥ b·∫•t k·ª≥ c√¢u h·ªèi ho·∫∑c th·∫Øc m·∫Øc n√†o, xin vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua:</p>
                        <ul>
                              <li>Hotline: 094 818 2978</li>
                              <li>Email: managerkoidayne@gmail.com</li>
                        </ul>

                    <div class="signature">
                        <p>Tr√¢n tr·ªçng,<br />Koi ƒë√¢y n√® ‚ú®</p>
                    </div>

                    <div class="footer">
                        <p>‚ú® Koi Dayne - ƒê·ªìng H√†nh C√πng Phong C√°ch C·ªßa B·∫°n ‚ú®</p>
                    </div>
                </div>
            </body>
        </html>
    `;
};
